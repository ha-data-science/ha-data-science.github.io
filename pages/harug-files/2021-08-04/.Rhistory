### 02 ####
# Show the code to convert the diet variable to an ordinal factor
# with the order "control" > "enhanced", and the sex variable to
# a plain categorical factor.
library(openxlsx)
setwd(r'(D:\Dropbox\git-hads\ha-data-science.github.io\pages\harug-files\2021-08-04)')
data <- read.xlsx('1.4-butterfly.xlsx')
data1[ ,"diet"] <- factor(x = data1[ ,"diet"], levels = c("control", "enhanced"))
data1 <- read.xlsx('1.4-butterfly.xlsx')
data1[ ,"diet"] <- factor(x = data1[ ,"diet"], levels = c("control", "enhanced"))
data1
str(data1)
data1$diet <- factor(data1$diet, ordered = T)
data1$diet <- factor(data1$diet, ordered = T,levels = c("control", "enhanced"))
data1$diet <- factor(data1$diet, ordered = T,levels = c(enhanced", "control"))
str(data1)
### 03 ####
# Show code for 2 different variations of using only the "[ , ]" operator
# with your data frame to show the following output:
#   diet length
# 8   control      6
# 9   control      7
# 10  control      6
# 11 enhanced      8
# 12 enhanced      7
# 13 enhanced      9
### 04 ####
# Show code to read in a comma separated values data file that does not
# have a header (first row containing variable names).
### 05 ####
# Describe in your own words what the attach() function does.
### 06 ####
# Write a plausible practice question involving any aspect of
# manipuation of a data frame.
data1$diet <- factor(data1$diet, ordered = T,levels = c("enhanced", "control"))
str(data1)
data1$diet
data1$diet <- factor(data1$diet, ordered = T, levels = c("enhanced", "control"))
data1$diet
class(data1$diet)
data(iris)
head(iris)
pairs(iris[ ,1:4])
pairs(iris[ ,1:4],
col=c("red", "green3", "blue")[iris$Species])
pairs(iris[ ,1:4],
col=c("red", "green3", "blue")[iris$Species],
lower.panel = NULL)
library(psych)
install.packages('psych')
library(psych)
pairs.panels(iris[,1:4],
method = "pearson",
hist.col = "blue",
density = TRUE,  # show density plots
ellipses = TRUE # show correlation ellipses
)
head(iris)
pairs(iris[ ,1:4],
col=c("red", "green3", "blue")[iris$Species],
lower.panel = NULL)
pairs(iris[ ,1:4],
col=c("red", "green3", "blue")[iris$Species],
lower.panel = NULL)
pairs.panels(iris[,1:4],
method = "pearson",
hist.col = "blue",
density = TRUE,  # show density plots
ellipses = TRUE # show correlation ellipses
)
x <- rnorm(100)
y <- rnorm(100)
plot(y~x)
plot(y~x)
abline(h=0)
abline(v=1)
host(x)
hist(x)
abline(v = mean(x), col = 'green3', lwd = 2)
boxplot(x~rep(c('a', 'b'), 50))
abline(h=mean(x)+sd(x), col = 'blue', lwd = 2, lty = 2)
pairs(iris[ ,1:4],
col=c("red", "green3", "blue")[iris$Species],
upper.panel = NULL)
pairs(iris[ ,1:4],
col=c("red", "green3", "blue")[iris$Species],
upper.panel = NULL)
pairs(iris[ ,1:4],
col=c("red", "green3", "blue")[iris$Species],
upper.panel = NULL, log = 'xy')
