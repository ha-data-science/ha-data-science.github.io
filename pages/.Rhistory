# Let's simulate some fake weight data for 1000 cats
help(rnorm) # A very useful function
set.seed(42)
cats <- rnorm(n = 10000,
mean = 4,
sd = 0.5)
cats[1:10] # The first 10 cats
hist(x = cats,
xlab = "Cat weight (Kg)")
mymeans <- vector(mode = "numeric",
length = 100)
mymeans
cats
for(i in 1:100){
mysample <- sample(x = cats, # Takes a random sample
size = 30)
mymean[i] <- mean(mysample) # stores sample mean in ith vector address
}
mymean
for(i in 1:100){
mysample <- sample(x = cats, # Takes a random sample
size = 30)
mymean[i] <- mean(mysample) # stores sample mean in ith vector address
}
mymeans # Our samples
for(i in 1:100){
mysample <- sample(x = cats, # Takes a random sample
size = 30)
mymeans[i] <- mean(mysample) # stores sample mean in ith vector address
}
mymeans
for(i in 1:100){
mysample <- sample(x = cats, # Takes a random sample
size = 30)
mymean[i] <- mean(mysample) # stores sample mean in ith vector address
}
mymean
mymean <- vector(mode = "numeric",
length = 100)
mymean # Empty
for(i in 1:100){
mysample <- sample(x = cats, # Takes a random sample
size = 30)
mymean[i] <- mean(mysample) # stores sample mean in ith vector address
}
mymean # Our samples
hist(x = mymean,
xlab = "Mean of samples",
main = "100 cat weight samples (n = 30/sample)")
## 00 Look at the "iris" data ####
# Here we are "telling R" we want to
# use a dataset called "iris"
data(iris)
force(iris)
# Print the "head" (first 6 lines) if iris data
head(iris)
# Print the "head" (first 6 lines) if iris data
head(iris)
# The code on the next line will display the help page for the iris data
?iris
# Make a boxplot showing the Sepal.Length for each iris Species
boxplot(formula = Sepal.Length ~ Species,
data = iris)
?leaps::re.subsets
?leaps::reg.subsets
install.packages('leaps')
?leaps::regsubsets
?leaps::regsubsets
24000/12
2000*1.6
3200/3
